%import common.NUMBER
%import common.SIGNED_NUMBER
%import common.ESCAPED_STRING
%import common.CNAME
%import common.WS_INLINE
%import common.WS
%import common.NEWLINE

%ignore WS

LITERAL: SIGNED_NUMBER | NUMBER | ESCAPED_STRING | CNAME
comment: "#" /.+/

LENGTH: "[" NUMBER* "]"
TYPENAME: ("int8" | "int16" | "int32" | "int64" 
  | "uint8" | "uint16" | "uint32" | "uint64"
  | "float16" | "float32"
  | "bool" )
VARIABLE_TYPENAME: "bytes" | "string"
prim: TYPENAME
prim_variable.1: VARIABLE_TYPENAME "[" [NUMBER] "]"
type: prim_variable | prim | CNAME
array: "[" NUMBER* "]"

name: CNAME
value: LITERAL
number: NUMBER*

argument_val: [CNAME "="] LITERAL

annotation: "@" CNAME ["(" (argument_val ",")* [argument_val|LITERAL] ")"]

enum_value: annotation* name "=" value [comment]
enum: annotation* "enum" name ":" prim [comment] "{" (enum_value|comment)+ "}" [comment]

struct_member: annotation* name ":" type [array] ["=" value ] [comment]
struct: annotation* "struct" name [comment] "{" (struct_member|comment)+ "}" [comment]

proto_message_id: annotation* name "=" number [comment]
proto_member: annotation* name "=" value [comment]
proto_message_ids: annotation* "messageIds" [comment] "{" (proto_message_id|comment)+ "}" [comment]
proto: annotation* "protocol" [comment] "{" (proto_member|proto_message_ids|comment)+ "}" [comment]
start: (enum|struct|proto|comment)+
